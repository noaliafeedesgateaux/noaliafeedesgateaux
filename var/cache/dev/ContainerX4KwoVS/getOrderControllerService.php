<?php

namespace ContainerX4KwoVS;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOrderControllerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'App\Controller\OrderController' shared autowired service.
     *
     * @return \App\Controller\OrderController
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'vendor'.\DIRECTORY_SEPARATOR.'symfony'.\DIRECTORY_SEPARATOR.'framework-bundle'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'AbstractController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Controller'.\DIRECTORY_SEPARATOR.'OrderController.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Persister'.\DIRECTORY_SEPARATOR.'OrderPersister.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Email'.\DIRECTORY_SEPARATOR.'EmailSender.php';
        include_once \dirname(__DIR__, 4).''.\DIRECTORY_SEPARATOR.'src'.\DIRECTORY_SEPARATOR.'Email'.\DIRECTORY_SEPARATOR.'OrderEmailSender.php';

        $a = ($container->services['doctrine.orm.default_entity_manager'] ?? $container->getDoctrine_Orm_DefaultEntityManagerService());

        $container->services['App\\Controller\\OrderController'] = $instance = new \App\Controller\OrderController(new \App\Persister\OrderPersister($a, ($container->privates['debug.validator'] ?? $container->getDebug_ValidatorService())), new \App\Email\OrderEmailSender(($container->privates['App\\Repository\\UserRepository'] ?? $container->getUserRepositoryService()), ($container->privates['twig'] ?? $container->getTwigService()), ($container->services['router'] ?? $container->getRouterService())), ($container->privates['App\\Repository\\OrderRepository'] ?? $container->load('getOrderRepositoryService')), $a);

        $instance->setContainer(($container->privates['.service_locator.CshazM0'] ?? $container->load('get_ServiceLocator_CshazM0Service'))->withContext('App\\Controller\\OrderController', $container));

        return $instance;
    }
}
